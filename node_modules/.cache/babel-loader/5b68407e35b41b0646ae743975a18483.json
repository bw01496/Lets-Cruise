{"ast":null,"code":"import { callApi } from \"../components/utils\";\nexport const createOrder = async ({\n  userId,\n  completePurchase,\n  productId,\n  quantity,\n  token\n}) => {\n  console.log(\"creating order from apiorder\", {\n    userId,\n    completePurchase,\n    productId,\n    quantity,\n    token\n  });\n  const data = await callApi({\n    method: 'POST',\n    url: '/orders',\n    body: {\n      userId,\n      completePurchase,\n      productId,\n      quantity\n    },\n    token\n  });\n  return data;\n};\nexport const updateQuantity = async (orderId, quantity, token) => {\n  const data = await callApi({\n    method: 'PATCH',\n    url: `orders/${orderId}`,\n    body: {\n      quantity\n    },\n    token\n  });\n  return data;\n};\nexport const orderDelete = async (orderId, token) => {\n  const data = await callApi({\n    method: \"DELETE\",\n    url: `orders/${orderId}`,\n    token\n  });\n  return data;\n};\nexport const getOrderById = async userId => {\n  const data = await callApi({\n    url: `orders/${userId}`\n  });\n  return data;\n};\nexport const fetchAllOrdersByUserId = async (userId, token) => {\n  const data = await callApi({\n    url: `orders/users/${userId}`,\n    token\n  });\n  return data;\n};\nexport const getCartByUser = async (userId, token) => {\n  console.log('getusercart>>', userId);\n  const data = await callApi({\n    url: `/orders/cart/${userId}`,\n    token\n  });\n  console.log('getuserCart', data);\n  return data;\n};\nexport const destroyCart = async (userId, token) => {\n  const data = await callApi({\n    method: 'DELETE',\n    url: `orders/cart/${userId}`,\n    token\n  });\n  return data;\n};","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/outdoorsthings/src/api/orders.js"],"names":["callApi","createOrder","userId","completePurchase","productId","quantity","token","console","log","data","method","url","body","updateQuantity","orderId","orderDelete","getOrderById","fetchAllOrdersByUserId","getCartByUser","destroyCart"],"mappings":"AAAA,SAASA,OAAT,QAAwB,qBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,OAAO;AAACC,EAAAA,MAAD;AAASC,EAAAA,gBAAT;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,QAAtC;AAAgDC,EAAAA;AAAhD,CAAP,KAAmE;AAC1FC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C;AAACN,IAAAA,MAAD;AAASC,IAAAA,gBAAT;AAA2BC,IAAAA,SAA3B;AAAsCC,IAAAA,QAAtC;AAAgDC,IAAAA;AAAhD,GAA5C;AACA,QAAMG,IAAI,GAAG,MAAMT,OAAO,CAAC;AACvBU,IAAAA,MAAM,EAAE,MADe;AAEvBC,IAAAA,GAAG,EAAE,SAFkB;AAGvBC,IAAAA,IAAI,EAAE;AACFV,MAAAA,MADE;AAEFC,MAAAA,gBAFE;AAGFC,MAAAA,SAHE;AAIFC,MAAAA;AAJE,KAHiB;AASvBC,IAAAA;AATuB,GAAD,CAA1B;AAWA,SAAOG,IAAP;AACH,CAdM;AAgBP,OAAO,MAAMI,cAAc,GAAG,OAAOC,OAAP,EAAgBT,QAAhB,EAA0BC,KAA1B,KAAoC;AAC9D,QAAMG,IAAI,GAAG,MAAMT,OAAO,CAAC;AACvBU,IAAAA,MAAM,EAAE,OADe;AAEvBC,IAAAA,GAAG,EAAG,UAASG,OAAQ,EAFA;AAGvBF,IAAAA,IAAI,EAAE;AACFP,MAAAA;AADE,KAHiB;AAMvBC,IAAAA;AANuB,GAAD,CAA1B;AAQA,SAAOG,IAAP;AAEH,CAXM;AAaP,OAAO,MAAMM,WAAW,GAAG,OAAOD,OAAP,EAAgBR,KAAhB,KAA0B;AACjD,QAAMG,IAAI,GAAG,MAAMT,OAAO,CAAC;AACvBU,IAAAA,MAAM,EAAE,QADe;AAEvBC,IAAAA,GAAG,EAAG,UAASG,OAAQ,EAFA;AAGvBR,IAAAA;AAHuB,GAAD,CAA1B;AAMA,SAAOG,IAAP;AACH,CARM;AAUP,OAAO,MAAMO,YAAY,GAAG,MAAOd,MAAP,IAAkB;AAC1C,QAAMO,IAAI,GAAG,MAAMT,OAAO,CAAC;AACvBW,IAAAA,GAAG,EAAE,UAAST,MAAO;AADE,GAAD,CAA1B;AAGA,SAAOO,IAAP;AACH,CALM;AAOP,OAAO,MAAMQ,sBAAsB,GAAG,OAAOf,MAAP,EAAeI,KAAf,KAAyB;AAC3D,QAAMG,IAAI,GAAG,MAAMT,OAAO,CAAC;AACvBW,IAAAA,GAAG,EAAG,gBAAeT,MAAO,EADL;AAEvBI,IAAAA;AAFuB,GAAD,CAA1B;AAIA,SAAOG,IAAP;AACH,CANM;AAQP,OAAO,MAAMS,aAAa,GAAG,OAAOhB,MAAP,EAAeI,KAAf,KAAyB;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,MAA7B;AACA,QAAMO,IAAI,GAAG,MAAMT,OAAO,CAAC;AACvBW,IAAAA,GAAG,EAAG,gBAAeT,MAAO,EADL;AAEvBI,IAAAA;AAFuB,GAAD,CAA1B;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BC,IAA1B;AACA,SAAOA,IAAP;AACH,CARM;AAUP,OAAO,MAAMU,WAAW,GAAG,OAAOjB,MAAP,EAAeI,KAAf,KAAyB;AAChD,QAAMG,IAAI,GAAG,MAAMT,OAAO,CAAC;AACvBU,IAAAA,MAAM,EAAE,QADe;AAEvBC,IAAAA,GAAG,EAAG,eAAcT,MAAO,EAFJ;AAGvBI,IAAAA;AAHuB,GAAD,CAA1B;AAKA,SAAOG,IAAP;AACH,CAPM","sourcesContent":["import { callApi } from \"../components/utils\";\n\nexport const createOrder = async ({userId, completePurchase, productId, quantity, token }) => {\n    console.log(\"creating order from apiorder\", {userId, completePurchase, productId, quantity, token })\n    const data = await callApi({\n        method: 'POST',\n        url: '/orders',\n        body: {\n            userId,\n            completePurchase,\n            productId,\n            quantity\n        },\n        token\n    })\n    return data;\n}\n\nexport const updateQuantity = async (orderId, quantity, token) => {\n    const data = await callApi({\n        method: 'PATCH',\n        url: `orders/${orderId}`,\n        body: {\n            quantity\n        },\n        token\n    })\n    return data;\n\n}\n\nexport const orderDelete = async (orderId, token) => {\n    const data = await callApi({\n        method: \"DELETE\",\n        url: `orders/${orderId}`,\n        token\n\n    });\n    return data;\n}\n\nexport const getOrderById = async (userId) => {\n    const data = await callApi({\n        url:`orders/${userId}`\n    });\n    return data\n}\n\nexport const fetchAllOrdersByUserId = async (userId, token) => {\n    const data = await callApi({\n        url: `orders/users/${userId}`,\n        token\n    });\n    return data\n}\n\nexport const getCartByUser = async (userId, token) => {\n    console.log('getusercart>>', userId)\n    const data = await callApi({\n        url: `/orders/cart/${userId}`,\n        token\n    });\n    console.log('getuserCart',data)\n    return data\n}\n\nexport const destroyCart = async (userId, token) => {\n    const data = await callApi({\n        method: 'DELETE',\n        url: `orders/cart/${userId}`,\n        token\n    })\n    return data; \n}"]},"metadata":{},"sourceType":"module"}