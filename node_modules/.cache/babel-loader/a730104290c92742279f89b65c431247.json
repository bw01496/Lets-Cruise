{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/outdoorsthings/src/components/MyCart.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, Routes, useNavigate } from \"react-router-dom\";\n\nconst MyCart = ({\n  userId,\n  token,\n  setMyProducts,\n  myProducts,\n  products\n}) => {\n  const [quantity, setQuantity] = useState();\n  const [total, setTotal] = useState();\n  console.log('>>>>>', total);\n  let totalPrice = 0;\n\n  const getMyProducts = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/orders/cart/${userId}`);\n      const data = await response.json();\n      setMyProducts(data);\n      getTotal();\n      setTotal(totalPrice);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getMyProducts();\n  }, []);\n\n  function getTotal() {\n    myProducts.map(element => {\n      totalPrice += element.price;\n    });\n  }\n\n  console.log(\"from my cart\", myProducts);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"My Cart\"), myProducts ? myProducts.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, item.title, \"  \", item.price))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Cart is Empty\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }, \"Total Cost:  \", total));\n};\n\nexport default MyCart;","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/outdoorsthings/src/components/MyCart.js"],"names":["React","useEffect","useState","Link","Routes","useNavigate","MyCart","userId","token","setMyProducts","myProducts","products","quantity","setQuantity","total","setTotal","console","log","totalPrice","getMyProducts","response","fetch","data","json","getTotal","error","map","element","price","item","id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,WAAvB,QAA0C,kBAA1C;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,aAAjB;AAAgCC,EAAAA,UAAhC;AAA4CC,EAAAA;AAA5C,CAAD,KAA2D;AAEtE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,KAApB;AACA,MAAII,UAAU,GAAG,CAAjB;;AAEA,QAAMC,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCd,MAAO,EAAjD,CAA5B;AACA,YAAMe,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAd,MAAAA,aAAa,CAACa,IAAD,CAAb;AACAE,MAAAA,QAAQ;AACRT,MAAAA,QAAQ,CAACG,UAAD,CAAR;AACD,KAND,CAME,OAAOO,KAAP,EAAc;AACdT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACD;AACF,GAVD;;AAWAxB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASK,QAAT,GAAmB;AACjBd,IAAAA,UAAU,CAACgB,GAAX,CAAeC,OAAO,IAAI;AACxBT,MAAAA,UAAU,IAAIS,OAAO,CAACC,KAAtB;AACD,KAFD;AAID;;AAEDZ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,UAA5B;AAMA,sBACI,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGA,UAAU,GAAGA,UAAU,CAACgB,GAAX,CAAgBG,IAAD,iBAC3B;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,KAAV,QAAmBF,IAAI,CAACD,KAAxB,CADA,CADY,CAAH,gBAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARR,eASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBd,KAAlB,CATD,CADJ;AAiBH,CApDD;;AAsDA,eAAeR,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Link, Routes, useNavigate } from \"react-router-dom\";\n\nconst MyCart = ({ userId, token, setMyProducts, myProducts, products}) => {\n\n    const [quantity, setQuantity] = useState();\n    const [total, setTotal] = useState();\n    console.log('>>>>>',total)\n    let totalPrice = 0\n    \n    const getMyProducts = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/api/orders/cart/${userId}`);\n        const data = await response.json();\n        setMyProducts(data);\n        getTotal()\n        setTotal(totalPrice)\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    useEffect(() => {\n      getMyProducts();\n    }, []);\n    \n    function getTotal(){\n      myProducts.map(element => {\n        totalPrice += element.price\n      });\n\n    }\n    \n    console.log(\"from my cart\", myProducts)\n   \n\n\n\n\n    return (\n        <>\n          <h1>My Cart</h1>\n          {myProducts ? myProducts.map((item) => (\n            <div className='cart' key={item.id}>\n            <h5>{item.title}  {item.price}</h5> \n             \n            </div> \n          \n           )) : <div>Cart is Empty</div>}\n         <h5>Total Cost:  {total}</h5>\n          \n          \n        </>\n    \n    )\n\n}\n\nexport default MyCart;"]},"metadata":{},"sourceType":"module"}