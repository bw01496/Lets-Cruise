{"ast":null,"code":"import { callApi } from \"../components/utils\";\nexport const createOrder = async ({\n  userId,\n  completePurchase,\n  productId,\n  quantity,\n  token\n}) => {\n  const data = await callApi({\n    method: \"POST\",\n    url: \"/orders\",\n    body: {\n      userId,\n      completePurchase,\n      productId,\n      quantity\n    },\n    token\n  });\n  return data;\n};\nexport const updateQuantity = async (orderId, quantity, token) => {\n  const data = await callApi({\n    method: \"PATCH\",\n    url: `orders/${orderId}`,\n    body: {\n      quantity\n    },\n    token\n  });\n  return data;\n};\nexport const orderDelete = async (orderId, token) => {\n  const data = await callApi({\n    method: \"DELETE\",\n    url: `orders/${orderId}`,\n    token\n  });\n  return data;\n};\nexport const getOrderById = async userId => {\n  const data = await callApi({\n    url: `orders/${userId}`\n  });\n  console.log(\"getordersbyID\", data);\n  return data;\n};\nexport const fetchAllOrdersByUserId = async (userId, token) => {\n  const data = await callApi({\n    url: `orders/users/${userId}`,\n    token\n  });\n  return data;\n};\nexport const getCartByUser = async (userId, token) => {\n  console.log(\"getusercart>>\", userId);\n  const data = await callApi({\n    url: `/orders/cart/${userId}`,\n    token\n  });\n  console.log(\"getuserCart\", data);\n  return data;\n};\nexport const destroyCart = async (userId, token) => {\n  console.log(\"destroy cart api\", userId, token);\n  const data = await callApi({\n    method: \"DELETE\",\n    url: `/orders/cart/${userId}`,\n    token\n  });\n  console.log(\"from destroy cart API\", data);\n  return data;\n};\nexport const submitCheckout = async (body, token) => {\n  const data = await callApi({\n    url: `checkout/`,\n    method: \"POST\",\n    body,\n    token\n  });\n  return data;\n};","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/outdoorsthings/src/api/orders.js"],"names":["callApi","createOrder","userId","completePurchase","productId","quantity","token","data","method","url","body","updateQuantity","orderId","orderDelete","getOrderById","console","log","fetchAllOrdersByUserId","getCartByUser","destroyCart","submitCheckout"],"mappings":"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","sourcesContent":["import { callApi } from \"../components/utils\";\n\nexport const createOrder = async ({\n  userId,\n  completePurchase,\n  productId,\n  quantity,\n  token,\n}) => {\n  const data = await callApi({\n    method: \"POST\",\n    url: \"/orders\",\n    body: {\n      userId,\n      completePurchase,\n      productId,\n      quantity,\n    },\n    token,\n  });\n  return data;\n};\n\nexport const updateQuantity = async (orderId, quantity, token) => {\n  const data = await callApi({\n    method: \"PATCH\",\n    url: `orders/${orderId}`,\n    body: {\n      quantity,\n    },\n    token,\n  });\n  return data;\n};\n\nexport const orderDelete = async (orderId, token) => {\n  const data = await callApi({\n    method: \"DELETE\",\n    url: `orders/${orderId}`,\n    token,\n  });\n  return data;\n};\n\nexport const getOrderById = async (userId) => {\n  const data = await callApi({\n    url: `orders/${userId}`,\n  });\n  console.log(\"getordersbyID\", data);\n  return data;\n};\n\nexport const fetchAllOrdersByUserId = async (userId, token) => {\n  const data = await callApi({\n    url: `orders/users/${userId}`,\n    token,\n  });\n  return data;\n};\n\nexport const getCartByUser = async (userId, token) => {\n  console.log(\"getusercart>>\", userId);\n  const data = await callApi({\n    url: `/orders/cart/${userId}`,\n    token,\n  });\n  console.log(\"getuserCart\", data);\n  return data;\n};\n\nexport const destroyCart = async (userId, token) => {\n  console.log(\"destroy cart api\", userId, token);\n  const data = await callApi({\n    method: \"DELETE\",\n    url: `/orders/cart/${userId}`,\n    token,\n  });\n  console.log(\"from destroy cart API\", data);\n  return data;\n};\n\nexport const submitCheckout = async (body, token) => {\n  const data = await callApi({\n    url: `checkout/`,\n    method: \"POST\",\n    body,\n    token,\n  });\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}