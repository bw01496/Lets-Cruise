{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/outdoorsthings/src/components/Login.js\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport { callApi } from \"./utils\";\nconst APIURL = `http://localhost:3000/api`;\nconst REACT_APP_API_URL = process.env;\n\nconst Login = ({\n  setUserId,\n  setLoggedin,\n  loggedIn,\n  setToken,\n  setUser\n}) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isMatched, setIsMatched] = useState(false);\n  const params = useParams();\n  let navigate = useNavigate();\n\n  function logIn(resp) {\n    console.log(\"from login\", `${APIURL}/users/${params.method}`);\n\n    if (resp) {\n      setUserId(resp.user.id);\n      setToken(resp.token);\n      localStorage.setItem(\"token\", resp.token);\n\n      if (resp.token == \"\") {\n        setLoggedin(false);\n      } else {\n        setLoggedin(true);\n        navigate(\"/products\");\n      }\n    }\n  }\n\n  async function loginRoutine() {\n    console.log(\"from loginRoutine\", `${APIURL}/users/${params.method}`);\n\n    try {\n      const resp = await fetch(`${APIURL}/users/${params.method}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          username,\n          password\n        })\n      });\n      const data = await resp.json();\n      setUser(data.user);\n      logIn(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  if (loggedIn === false) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Login/Register\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"title\",\n      onSubmit: async event => {\n        event.preventDefault();\n\n        if (params.method !== \"register\") {\n          loginRoutine();\n        } else if (password === passwordConfirm) {\n          setIsMatched(false);\n          loginRoutine();\n        } else {\n          setIsMatched(true);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"first name\",\n      value: firstName,\n      onChange: event => setFirstName(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"last name\",\n      value: lastName,\n      onChange: event => setLastName(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"E-mail\",\n      value: email,\n      onChange: event => setEmail(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: event => setUsername(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: event => setPassword(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: password.length < 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), params.method === \"register\" ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: passwordConfirm,\n      onChange: event => setPasswordConfirm(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }) : null, /*#__PURE__*/React.createElement(Link, {\n      to: \"/api/users/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"Register\")), password.length < 8 && params.method === \"register\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Your password must be 8 characters long\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: isMatched ? \"\" : \"noMatch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"Your passwords don't match\")));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \"Welcome\"));\n  }\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/outdoorsthings/src/components/Login.js"],"names":["React","useState","Link","useNavigate","useParams","callApi","APIURL","REACT_APP_API_URL","process","env","Login","setUserId","setLoggedin","loggedIn","setToken","setUser","username","setUsername","password","setPassword","passwordConfirm","setPasswordConfirm","firstName","setFirstName","lastName","setLastName","email","setEmail","isMatched","setIsMatched","params","navigate","logIn","resp","console","log","method","user","id","token","localStorage","setItem","loginRoutine","fetch","headers","body","JSON","stringify","data","json","error","event","preventDefault","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport { callApi } from \"./utils\";\nconst APIURL = `http://localhost:3000/api`\nconst REACT_APP_API_URL = process.env;\n\nconst Login = ({ setUserId, setLoggedin, loggedIn, setToken, setUser }) => {\n  \n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\")\n  const [isMatched, setIsMatched] = useState(false);\n  const params = useParams();\n  \n  \n  let navigate = useNavigate();\n\n  function logIn(resp) {\n      console.log(\"from login\", `${APIURL}/users/${params.method}`)\n    if (resp) {\n      setUserId(resp.user.id);\n      setToken(resp.token);\n      localStorage.setItem(\"token\", resp.token);\n      if (resp.token == \"\") {\n        setLoggedin(false);\n      } else {\n        setLoggedin(true);\n        navigate(\"/products\");\n      }\n    }\n  }\n\n  async function loginRoutine() {\n    console.log(\"from loginRoutine\", `${APIURL}/users/${params.method}`)\n    try {\n      const resp = await fetch(`${APIURL}/users/${params.method}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": 'application/json',\n        },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          username,\n          password,\n\n        })\n      })\n      \n      const data = await resp.json()\n      setUser(data.user)\n      logIn(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  if (loggedIn === false) {\n    return (\n      <>\n        <h1 className=\"title\">Login/Register</h1>\n        <form\n          className=\"title\"\n          onSubmit={async (event) => {\n            event.preventDefault();\n            if (params.method !== \"register\") {\n              loginRoutine();\n            } else if (password === passwordConfirm) {\n              setIsMatched(false);\n              loginRoutine();\n            } else {\n              setIsMatched(true);\n            }\n          }}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"first name\"\n            value={firstName}\n            onChange={(event) => setFirstName(event.target.value)}\n          ></input>\n          <br></br>\n          <input\n            type=\"text\"\n            placeholder=\"last name\"\n            value={lastName}\n            onChange={(event) => setLastName(event.target.value)}\n          ></input>\n          <br></br>\n          <input\n            type=\"text\"\n            placeholder=\"E-mail\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          ></input>\n          <br></br>\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          ></input>\n          <br></br>\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          ></input>\n          <button type=\"submit\" disabled={password.length < 8}>\n            Submit\n          </button>\n          <br></br>\n          {params.method === \"register\" ? (\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              value={passwordConfirm}\n              onChange={(event) => setPasswordConfirm(event.target.value)}\n            ></input>\n          ) : null}\n          <Link to=\"/api/users/register\">Register</Link>\n        </form>\n        {}\n        {password.length < 8 && params.method === \"register\" ? (\n          <div>\n            <h3>Your password must be 8 characters long</h3>\n          </div>\n        ) : null}\n        <div className={isMatched ? \"\" : \"noMatch\"}>\n          <h3>Your passwords don't match</h3>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <h1>Welcome</h1>\n      </>\n    );\n  }\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}